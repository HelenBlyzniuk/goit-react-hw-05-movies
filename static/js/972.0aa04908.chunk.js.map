{"version":3,"file":"static/js/972.0aa04908.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","helpers/API.js","webpack://react-homework-template/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.jsx","webpack://react-homework-template/./src/components/Notification/Notification.module.css?a91f","components/Notification/Notification.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchMovies\":\"MovieList_searchMovies__UtfED\",\"searchMovieItem\":\"MovieList_searchMovieItem__8aY9H\"};","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { useRef } from 'react';\n\nimport css from 'components/MovieList/MovieList.module.css';\n\nconst MovieList = ({ listName, films }) => {\n  const location = useLocation();\n  const backPageLocation = useRef(location.state?.from);\n  console.log('backPageLocation', backPageLocation);\n  console.log('MovieList:', location);\n  return (\n    <ul className={css.searchMovies}>\n      {listName}\n      {films.map(({ title, id }) => (\n        <li key={id} className={css.searchMovieItem}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\nexport default MovieList;\n\nMovieList.propTypes = {\n  listName: PropTypes.string.isRequired,\n  films: PropTypes.array.isRequired,\n};\n","import axios from 'axios';\n\nconst API_KEY = '0cfcdf1e4fa301f56ea0fab1777678b6';\n\nconst ID_URL = 'https://api.themoviedb.org/3/movie/';\nconst BASEURL = 'https://api.themoviedb.org/3/';\nconst TRANDINGMOVIE = 'trending/movie/week';\n// const CAST = 'movie/{movie_id}/credits';\n\nexport const getTrendingMovies = async () => {\n  return await axios.get(`${BASEURL}${TRANDINGMOVIE}?api_key=${API_KEY}`);\n};\n\n\nexport const getMovieById = async ( id ) => {\n  return await axios.get(`${ID_URL}${id}?api_key=${API_KEY}`);\n};\n\nexport const getCast = async (id) => {\n  return await axios.get(`${BASEURL}movie/${id}/credits?api_key=${API_KEY}&page=1&12per_page`)\n}\n\nexport const getReview = async (id) => {\n  return await axios.get(`${BASEURL}movie/${id}/reviews?api_key=${API_KEY}`)\n}\n\n\nexport const getMovieByQuery = async ( query ) => {\n  return await axios.get(`${BASEURL}search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}&`);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"Searchbar_searchForm__Bt5yh\",\"button\":\"Searchbar_button__nkcjk\",\"input\":\"Searchbar_input__19umw\",\"label\":\"Searchbar_label__BRcTT\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport css from 'components/Searchbar/Searchbar.module.css';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n  const handleChange = e => {\n    setQuery(e.target.value.trim().toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!query) {\n      alert('Make your request');\n      return;\n    }\n    onSubmit(query);\n  };\n  return (\n    <form onSubmit={handleSubmit} className={css.searchForm}>\n      <label className={css.label}>\n        <input\n          className={css.input}\n          onChange={handleChange}\n          type=\"text\"\n          value={query}\n          name=\"query\"\n        />\n      </label>\n      <button type=\"submit\" className={css.button}>\n        Search\n      </button>\n    </form>\n  );\n};\n\nexport default Searchbar;\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"sentence\":\"Notification_sentence__qA-2U\"};","import css from 'components/Notification/Notification.module.css';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ text }) => {\n  return <div className={css.sentence}>{text}</div>;\n};\n\nexport default Notification;\n\nNotification.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { getMovieByQuery } from 'helpers/API';\nimport { useSearchParams } from 'react-router-dom';\nimport MovieList from 'components/MovieList/MovieList';\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport Notification from 'components/Notification/Notification';\nimport Loader from 'components/Loader/Loader';\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [value, setValue] = useState(searchParams.get('query') ?? '');\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [setError] = useState(null);\n\n  const query = searchParams.get('query') ?? '';\n\n  const getQuery = valueFromInput => {\n    if (valueFromInput === value) {\n      return;\n    }\n    setSearchParams({ query: valueFromInput });\n    setValue(valueFromInput);\n    setStatus('pending');\n  };\n\n  useEffect(() => {\n    getMovieByQuery(query)\n      .then(({ data: { results } }) => {\n        setMovies(results);\n        setStatus('resolved');\n      })\n      .catch(error => {\n        console.log(error.messege);\n        setStatus('rejected');\n        setError(error);\n      });\n  }, [query, setError]);\n  return (\n    <main>\n      <Searchbar onSubmit={getQuery} />\n      {status === 'pending' && (\n        <div>\n          <Loader />\n        </div>\n      )}\n      {movies.length > 0 && <MovieList listName={'Movies'} films={movies} />}\n      {query && movies.length === 0 && status !== 'pending' && (\n        <Notification\n          text={`Sorry, there are no films on your request. Make a new request or correct\n      your previous one`}\n        />\n      )}\n    </main>\n  );\n};\nexport default Movies;\n"],"names":["listName","films","location","useLocation","backPageLocation","useRef","state","from","console","log","className","css","map","title","id","to","API_KEY","BASEURL","getTrendingMovies","axios","getMovieById","getCast","getReview","getMovieByQuery","query","onSubmit","useState","setQuery","e","preventDefault","alert","onChange","target","value","trim","toLowerCase","type","name","text","useSearchParams","searchParams","setSearchParams","get","setValue","movies","setMovies","status","setStatus","setError","useEffect","then","results","data","catch","error","messege","valueFromInput","Loader","length","MovieList"],"sourceRoot":""}